{"version":3,"sources":["webpack:///./src/gatsby-theme-potato/components/PostFooter.tsx","webpack:///./node_modules/gatsby-theme-potato/src/components/Separator.tsx","webpack:///./node_modules/gatsby-theme-potato/src/components/BlogPost.tsx","webpack:///./node_modules/gatsby-theme-potato/src/components/BlogPostHeader.tsx","webpack:///./node_modules/gatsby-theme-potato/src/templates/BlogPostTemplate.tsx"],"names":["PostFooter","post","siteUrl","href","fields","slug","user","Separator","styled","hr","Content","div","PostFooterContainer","BlogPost","dangerouslySetInnerHTML","__html","html","HeaderBanner","backgroundImage","props","ArticleTitle","header","PageInfos","ReadingTime","span","BlogPostHeader","frontmatter","cover","publicURL","title","renderDate","date","CategoryLink","category","LangLink","lang","readingTime","text","query","BlogPostTemplate","data","site","markdownRemark","Layout","url","description","excerpt","siteMetadata"],"mappings":"oJAqBeA,EAjBe,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,QAAT,OAC5B,oCACE,iEACsC,IACpC,uBAAGC,KAAI,gCAAkCD,EAAlC,IAA6CD,EAAKG,OAAQC,MAAjE,sBAFF,KAOA,yDAIA,kBAAC,IAAD,CAAiBC,KAAK,YAAYL,KAAMA,EAAMC,QAASA,MCP5CK,EAPGC,IAAOC,GAAV,+DAAGD,CAAH,sFCMTE,EAAUF,IAAOG,IAAV,oEAAGH,CAAH,ygDA+IPI,EAAsBJ,IAAOG,IAAV,gFAAGH,CAAH,uCAqBVK,EAZa,SAAC,GAAD,IAAGZ,EAAH,EAAGA,KAAMC,EAAT,EAASA,QAAT,OAC1B,oCACE,iCACE,kBAACQ,EAAD,CAASI,wBAAyB,CAAEC,OAAQd,EAAKe,QACjD,kBAAC,EAAD,MACA,kBAACJ,EAAD,KACE,kBAAC,EAAD,CAAYV,QAASA,EAASD,KAAMA,Q,oDC/J5C,IAAMgB,EAAeT,aAAO,cAAGU,gBAAH,IAAuBC,E,oIAAvB,+BAC1B,wBAASA,MADO,+EAAGX,CAAH,wFAGQ,SAAAW,GAAK,OAAIA,EAAMD,mBAKnCE,EAAeZ,IAAOa,OAAV,+EAAGb,CAAH,gVA4BZc,EAAYd,IAAOG,IAAV,4EAAGH,CAAH,gMAkBTe,EAAcf,IAAOgB,KAAV,8EAAGhB,CAAH,yBA0BFiB,EAlBmB,SAAC,GAAD,IAAGxB,EAAH,EAAGA,KAAH,OAChC,kBAACgB,EAAD,CACEC,gBACEjB,EAAKyB,YAAaC,OAAU1B,EAAKyB,YAAaC,MAAOC,WAGvD,kBAACR,EAAD,KACE,4BAAKnB,EAAKyB,YAAaG,OACvB,kBAACP,EAAD,KACGQ,YAAW7B,EAAKyB,YAAaK,MADhC,KAC0C,IACxC,kBAACC,EAAA,EAAD,CAAcC,SAAUhC,EAAKyB,YAAaO,WAF5C,KAE4D,IAC1D,kBAACC,EAAA,EAAD,CAAUC,KAAMlC,EAAKyB,YAAaS,OAHpC,KAGgD,IAC9C,kBAACZ,EAAD,KAActB,EAAKG,OAAQgC,YAAaC,U,SCjFhD,sCAUA,IAgBaC,EAAQ,aAkCNC,UAlDqB,SAAC,GAE/B,QADJC,KAAQC,EACJ,EADIA,KAAsBxC,EAC1B,EADUyC,eAEd,OACE,kBAACC,EAAA,EAAD,CACEd,MAAO5B,EAAMyB,YAAaG,MAC1Be,IAAK3C,EAAMG,OAAQC,KACnBwC,YAAa5C,EAAM6C,QACnBX,KAAMlC,EAAMyB,YAAaS,KACzBd,OAAQ,kBAAC,EAAD,CAAgBpB,KAAMA,KAE9B,kBAAC,EAAD,CAAUA,KAAMA,EAAOC,QAASuC,EAAMM,aAAc7C","file":"component---node-modules-gatsby-theme-potato-src-templates-blog-post-template-tsx-e8baf7399a877d161bb6.js","sourcesContent":["import { PostTwitterCard } from 'gatsby-theme-potato'\nimport { Props } from 'gatsby-theme-potato/src/components/PostFooter'\nimport React, { FC } from 'react'\n\nconst PostFooter: FC<Props> = ({ post, siteUrl }) => (\n  <>\n    <p>\n      Like this article or want to react?{' '}\n      <a href={`https://twitter.com/search?q=${siteUrl}/${post.fields!.slug}`}>\n        Discuss on Twitter\n      </a>\n      .\n    </p>\n    <p>\n      Si vis pacem, para bellum.\n    </p>\n\n    <PostTwitterCard user=\"@scastiel\" post={post} siteUrl={siteUrl} />\n  </>\n)\n\nexport default PostFooter\n","import styled from 'styled-components'\nimport { Theme } from '../theme'\n\nconst Separator = styled.hr`\n  border-style: none;\n  border-bottom: 1px dotted\n    var(--separatorColor);\n  margin-top: 5em;\n`\n\nexport default Separator\n","import 'prismjs/plugins/line-numbers/prism-line-numbers.css'\nimport 'prismjs/themes/prism-tomorrow.css'\nimport React, { FC } from 'react'\nimport styled from 'styled-components'\nimport { Theme } from '../theme'\nimport { PostQuery_markdownRemark } from '../types/PostQuery'\nimport PostFooter from './PostFooter'\nimport Separator from './Separator'\n\nconst Content = styled.div`\n  line-height: 1.6em;\n\n  pre[class*='language-'] {\n    max-width: 100%;\n    overflow-x: auto;\n    line-height: 90%;\n    margin-top: 0;\n    margin-bottom: 0;\n    padding: 0.5em;\n\n    code {\n      font-size: 70%;\n    }\n  }\n\n  code {\n    font-size: 85%;\n  }\n\n  h2,\n  h3,\n  h4,\n  h5 {\n    font-family: var(--sansSerifFont);\n  }\n\n  h2 {\n    margin-top: 2em;\n  }\n\n  blockquote {\n    font-style: italic;\n    line-height: 1.7em;\n    font-size: 1.2em;\n    color: var(--lightTextColor);\n  }\n\n  figcaption {\n    text-align: center;\n    font-size: 0.8em;\n  }\n\n  figure {\n    margin-top: 2em;\n    margin-bottom: 2em;\n  }\n\n  figure.small-right {\n    @media (min-width: 75rem) {\n      margin-left: 0 !important;\n      margin-right: -10em !important;\n      float: right;\n\n      .gatsby-resp-image-wrapper {\n        width: 20em;\n        margin-left: 3em !important;\n        margin-right: 3em !important;\n      }\n    }\n  }\n\n  p code,\n  li code,\n  h2 code,\n  h3 code {\n    background-color: transparent !important;\n    color: var(--textColor) !important;\n    font-size: 0.95em !important;\n    padding: 0 !important;\n  }\n\n  @media (max-width: 45rem) {\n    .gatsby-highlight {\n      margin-left: -0.5em;\n      margin-right: -0.5em;\n    }\n  }\n\n  hr {\n    border-style: none;\n    text-align: center;\n\n    &:before {\n      content: '* * *';\n      color: var(--separatorColor);\n    }\n  }\n\n  .inset-right,\n  .inset-right-image {\n    width: 100%;\n    max-width: 25rem;\n    margin-left: auto;\n    margin-right: auto;\n    margin-bottom: 1rem;\n    padding: 1.3em;\n\n    &.inset-right-image {\n      figure {\n        margin: 0;\n      }\n    }\n\n    &.inset-right {\n      font-family: var(--sansSerifFont);\n      font-size: 0.9em;\n      line-height: 1.3em;\n      background-color: var(--lightAccentColor);\n\n      p {\n        margin: 0;\n      }\n\n      ul {\n        margin: 0;\n        padding-left: 1.5em;\n      }\n\n      h2 {\n        margin-top: 0;\n        text-align: left;\n        font-size: 1.2em;\n      }\n    }\n\n    @media (min-width: 45rem) {\n      margin-left: 2em !important;\n      float: right;\n    }\n\n    @media (min-width: 50rem) {\n      margin-right: -2rem;\n    }\n    @media (min-width: 55rem) {\n      margin-right: -5rem;\n    }\n    @media (min-width: 60rem) {\n      margin-right: -8rem;\n    }\n  }\n`\n\nconst PostFooterContainer = styled.div`\n  font-family: var(--sansSerifFont);\n`\n\nexport interface Props {\n  post: PostQuery_markdownRemark\n  siteUrl: string\n}\n\nconst BlogPost: FC<Props> = ({ post, siteUrl }) => (\n  <>\n    <article>\n      <Content dangerouslySetInnerHTML={{ __html: post.html! }} />\n      <Separator />\n      <PostFooterContainer>\n        <PostFooter siteUrl={siteUrl} post={post} />\n      </PostFooterContainer>\n    </article>\n  </>\n)\n\nexport default BlogPost\n","import React, { FC } from 'react'\nimport styled from 'styled-components'\nimport { Theme } from '../theme'\nimport { PostQuery_markdownRemark } from '../types/PostQuery'\nimport { renderDate } from '../utils'\nimport CategoryLink from './CategoryLink'\nimport LangLink from './LangLink'\n\nconst HeaderBanner = styled(({ backgroundImage, ...props }) => (\n  <div {...props} />\n))`\n  background-image: url(${props => props.backgroundImage});\n  background-size: cover;\n  background-position: center center;\n`\n\nconst ArticleTitle = styled.header`\n  background-color: var(--pageHeaderColor);\n  min-height: 20em;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n\n  & > * {\n    width: 100%;\n    max-width: 35rem;\n    margin: 0 auto;\n    text-align: center;\n  }\n\n  h1 {\n    color: white;\n    text-shadow: 0 0 5px black;\n    font-size: 1.8em;\n    padding-top: 1em;\n    padding-bottom: 0.5em;\n    font-weight: 700;\n  }\n\n  @media (max-width: 45rem) {\n    min-height: 0;\n  }\n`\n\nconst PageInfos = styled.div`\n  font-family: var(--sansSerifFont);\n  font-size: 0.9em;\n  color: white;\n  text-shadow: 0 0 5px black;\n  padding-bottom: 2em;\n\n  a {\n    color: inherit;\n    text-decoration: none;\n\n    :hover,\n    :active {\n      text-decoration: underline;\n    }\n  }\n`\n\nconst ReadingTime = styled.span`\n  white-space: nowrap;\n`\n\nexport interface Props {\n  post: PostQuery_markdownRemark\n}\n\nconst BlogPostHeader: FC<Props> = ({ post }) => (\n  <HeaderBanner\n    backgroundImage={\n      post.frontmatter!.cover! && post.frontmatter!.cover!.publicURL!\n    }\n  >\n    <ArticleTitle>\n      <h1>{post.frontmatter!.title!}</h1>\n      <PageInfos>\n        {renderDate(post.frontmatter!.date!)} –{' '}\n        <CategoryLink category={post.frontmatter!.category!} /> –{' '}\n        <LangLink lang={post.frontmatter!.lang!} /> –{' '}\n        <ReadingTime>{post.fields!.readingTime!.text!}</ReadingTime>\n      </PageInfos>\n    </ArticleTitle>\n  </HeaderBanner>\n)\n\nexport default BlogPostHeader\n","import { graphql } from 'gatsby'\nimport React, { FC } from 'react'\nimport BlogPost from '../components/BlogPost'\nimport BlogPostHeader from '../components/BlogPostHeader'\nimport { Layout } from '../components/Layout'\nimport { PostQuery } from '../types/PostQuery'\n\nexport interface Props {\n  data: PostQuery\n}\n\nconst BlogPostTemplate: FC<Props> = ({\n  data: { site, markdownRemark: post }\n}) => {\n  return (\n    <Layout\n      title={post!.frontmatter!.title!}\n      url={post!.fields!.slug!}\n      description={post!.excerpt!}\n      lang={post!.frontmatter!.lang!}\n      header={<BlogPostHeader post={post!} />}\n    >\n      <BlogPost post={post!} siteUrl={site!.siteMetadata!.siteUrl!} />\n    </Layout>\n  )\n}\n\nexport const query = graphql`\n  query PostQuery($slug: String!) {\n    site {\n      siteMetadata {\n        siteUrl\n      }\n    }\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      html\n      excerpt\n      frontmatter {\n        title\n        date\n        lang\n        category\n        cover {\n          publicURL\n          # childImageSharp {\n          #   sizes(maxWidth: 2000) {\n          #     ...GatsbyImageSharpSizes\n          #   }\n          # }\n        }\n      }\n      fields {\n        slug\n        readingTime {\n          text\n        }\n      }\n    }\n  }\n`\n\nexport default BlogPostTemplate\n"],"sourceRoot":""}