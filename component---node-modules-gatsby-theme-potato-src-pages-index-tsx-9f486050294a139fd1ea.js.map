{"version":3,"sources":["webpack:///./node_modules/gatsby-theme-potato/src/pages/index.tsx"],"names":["query","Index","uri","allMarkdownRemark","data","posts","edges","map","edge","node","url","displaySidebar","post","key","id"],"mappings":"0FACA,mFAsBaA,EAAQ,aAyBNC,UArCU,SAAC,GAAyC,IAAvCC,EAAuC,EAAvCA,IAAaC,EAA0B,EAAlCC,KAAQD,kBAEjCE,GADQF,EAAoBA,EAAkBG,MAAQ,IACxCC,KAAI,SAAAC,GAAI,OAAIA,EAAKC,QACrC,OACE,kBAAC,IAAD,CAAQC,IAAKR,EAAKS,gBAAc,GAC7BN,EAAME,KAAI,SAAAK,GAAI,OACb,kBAAC,IAAD,CAAiBC,IAAKD,EAAKE,GAAIF,KAAMA","file":"component---node-modules-gatsby-theme-potato-src-pages-index-tsx-9f486050294a139fd1ea.js","sourcesContent":["import { graphql } from 'gatsby'\nimport React, { FC } from 'react'\nimport BlogPostExcerpt from '../components/BlogPostExcerpt'\nimport { Layout } from '../components/Layout'\nimport { AllPostsQuery_allMarkdownRemark } from '../types/AllPostsQuery'\n\nexport interface Props {\n  uri: string\n  data: { allMarkdownRemark: AllPostsQuery_allMarkdownRemark }\n}\n\nconst Index: FC<Props> = ({ uri, data: { allMarkdownRemark } }) => {\n  const edges = allMarkdownRemark ? allMarkdownRemark.edges : []\n  const posts = edges.map(edge => edge.node)\n  return (\n    <Layout url={uri} displaySidebar>\n      {posts.map(post => (\n        <BlogPostExcerpt key={post.id} post={post} />\n      ))}\n    </Layout>\n  )\n}\n\nexport const query = graphql`\n  query AllPostsQuery {\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      edges {\n        node {\n          id\n          frontmatter {\n            title\n            date\n            lang\n            category\n          }\n          excerpt\n          fields {\n            slug\n            readingTime {\n              text\n            }\n          }\n        }\n      }\n    }\n  }\n`\n\nexport default Index\n"],"sourceRoot":""}